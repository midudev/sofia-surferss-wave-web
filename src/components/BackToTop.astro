<div
  id="scroll-observer"
  class="pointer-events-none absolute top-72 left-0 h-px w-px"
  aria-hidden="true"
></div>

<a
  id="back-to-top"
  href="#top"
  class="fixed right-6 bottom-6 z-40 flex h-12 w-12 items-center justify-center rounded-full bg-primary text-white opacity-0 transition-opacity duration-300 hover:bg-secondary shadow-md shadow-black/20 hover:shadow-black/20 ring-2 ring-white/80 hover:ring-white/50"
  aria-label="Volver arriba"
>
  <svg
    viewBox="0 0 384 512"
    class="w-4 h-5"
    aria-hidden="true"
  >
    <path
      fill="currentColor"
      d="M214.6 41.4c-12.5-12.5-32.8-12.5-45.3 0l-160 160c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 141.2V448c0 17.7 14.3 32 32 32s32-14.3 32-32V141.2L329.4 246.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-160-160z"
    ></path>
  </svg>
</a>

<style>
  @keyframes bounce-up {
    0%, 100% {
      transform: translateY(0%);
    }
    50% {
      transform: translateY(-20%);
    }
  }

  a:hover svg {
    animation: bounce-up 1.5s infinite;
  }
</style>

<script type="module">
  const button = document.getElementById('back-to-top')
  const observerTarget = document.getElementById('scroll-observer')

  if (button && observerTarget) {
    const updateVisibility = visible => {
      requestAnimationFrame(() => {
        button.classList.toggle('opacity-0', !visible)
        button.classList.toggle('opacity-100', visible)
        button.classList.toggle('cursor-pointer', visible)
        button.classList.toggle('cursor-default', !visible)
      })
    }

    const observer = new IntersectionObserver(([entry]) => {
      updateVisibility(!entry.isIntersecting)
    })

    observer.observe(observerTarget)
  }
</script>
